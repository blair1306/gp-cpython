<def f='include/x86_64-linux-gnu/bits/sigaction.h' l='24' ll='50'/>
<dec f='include/signal.h' l='257' type='int sigaction(int __sig, const struct sigaction *restrict __act, struct sigaction *restrict __oact)'/>
<size>152</size>
<doc f='include/signal.h' l='256'>/* Get and/or set the action for signal SIG.  */</doc>
<doc f='include/x86_64-linux-gnu/bits/sigaction.h' l='23'>/* Structure describing the action to be taken when a signal arrives.  */</doc>
<mbr r='sigaction::__sigaction_handler' o='0' t='union (anonymous union at /usr/include/x86_64-linux-gnu/bits/sigaction.h:28:5)'/>
<mbr r='sigaction::sa_mask' o='64' t='__sigset_t'/>
<mbr r='sigaction::sa_flags' o='1088' t='int'/>
<mbr r='sigaction::sa_restorer' o='1152' t='void (*)(void)'/>
<use f='codebrowser/Modules/faulthandler.c' l='304' u='c' c='faulthandler_disable_fatal_handler'/>
<use f='codebrowser/Modules/faulthandler.c' l='450' u='c' c='faulthandler_enable'/>
<use f='codebrowser/Modules/faulthandler.c' l='731' u='c' c='faulthandler_register'/>
<use f='codebrowser/Modules/faulthandler.c' l='762' u='c' c='faulthandler_user'/>
<use f='codebrowser/Modules/faulthandler.c' l='867' u='c' c='faulthandler_unregister'/>
<use f='codebrowser/Python/pylifecycle.c' l='2002' u='c' c='PyOS_getsig'/>
<use f='codebrowser/Python/pylifecycle.c' l='2048' u='c' c='PyOS_setsig'/>
