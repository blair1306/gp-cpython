<dec f='codebrowser/Modules/_ctypes/ctypes.h' l='361' type='PyObject * _ctypes_get_errobj(int ** pspace)'/>
<use f='codebrowser/Modules/_ctypes/callbacks.c' l='217' u='c' c='_CallPythonObject'/>
<def f='codebrowser/Modules/_ctypes/callproc.c' l='129' ll='172' type='PyObject * _ctypes_get_errobj(int ** pspace)'/>
<use f='codebrowser/Modules/_ctypes/callproc.c' l='178' u='c' c='get_error_internal'/>
<use f='codebrowser/Modules/_ctypes/callproc.c' l='197' u='c' c='set_error_internal'/>
<use f='codebrowser/Modules/_ctypes/callproc.c' l='785' u='c' c='_call_function_pointer'/>
<doc f='codebrowser/Modules/_ctypes/callproc.c' l='124'>/*
  This function creates and returns a thread-local Python object that has
  space to store two integer error numbers; once created the Python object is
  kept alive in the thread state dictionary as long as the thread itself.
*/</doc>
