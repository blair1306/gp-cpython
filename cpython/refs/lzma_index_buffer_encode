<dec f='include/lzma/index.h' l='648' type='lzma_ret lzma_index_buffer_encode(const lzma_index * i, uint8_t * out, size_t * out_pos, size_t out_size)'/>
<doc f='include/lzma/index.h' l='629'>/**
 * \brief       Single-call .xz Index encoder
 *
 * \param       i         lzma_index to be encoded
 * \param       out       Beginning of the output buffer
 * \param       out_pos   The next byte will be written to out[*out_pos].
 *                        *out_pos is updated only if encoding succeeds.
 * \param       out_size  Size of the out buffer; the first byte into
 *                        which no data is written to is out[out_size].
 *
 * \return      - LZMA_OK: Encoding was successful.
 *              - LZMA_BUF_ERROR: Output buffer is too small. Use
 *                lzma_index_size() to find out how much output
 *                space is needed.
 *              - LZMA_PROG_ERROR
 *
 * \note        This function doesn&apos;t take allocator argument since all
 *              the internal data is allocated on stack.
 */</doc>
