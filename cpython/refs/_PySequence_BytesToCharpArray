<dec f='codebrowser/Include/abstract.h' l='1091' type='char *const * _PySequence_BytesToCharpArray(PyObject * self)'/>
<use f='codebrowser/Modules/_posixsubprocess.c' l='611' u='c' c='subprocess_fork_exec'/>
<use f='codebrowser/Modules/_posixsubprocess.c' l='641' u='c' c='subprocess_fork_exec'/>
<use f='codebrowser/Modules/_posixsubprocess.c' l='649' u='c' c='subprocess_fork_exec'/>
<def f='codebrowser/Objects/abstract.c' l='2544' ll='2599' type='char *const * _PySequence_BytesToCharpArray(PyObject * self)'/>
<doc f='codebrowser/Objects/abstract.c' l='2536'>/*
 * Flatten a sequence of bytes() objects into a C array of
 * NULL terminated string pointers with a NULL char* terminating the array.
 * (ie: an argv or env list)
 *
 * Memory allocated for the returned list is allocated using PyMem_Malloc()
 * and MUST be freed by _Py_FreeCharPArray().
 */</doc>
