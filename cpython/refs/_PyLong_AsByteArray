<dec f='codebrowser/Include/longobject.h' l='163' type='int _PyLong_AsByteArray(PyLongObject * v, unsigned char * bytes, size_t n, int little_endian, int is_signed)'/>
<doc f='codebrowser/Include/longobject.h' l='144'>/* _PyLong_AsByteArray: Convert the least-significant 8*n bits of long
   v to a base-256 integer, stored in array bytes.  Normally return 0,
   return -1 on error.
   If little_endian is 1/true, store the MSB at bytes[n-1] and the LSB at
   bytes[0]; else (little_endian is 0/false) store the MSB at bytes[0] and
   the LSB at bytes[n-1].
   If is_signed is 0/false, it&apos;s an error if v &lt; 0; else (v &gt;= 0) n bytes
   are filled and there&apos;s nothing special about bit 0x80 of the MSB.
   If is_signed is 1/true, bytes is filled with the 2&apos;s-complement
   representation of v&apos;s value.  Bit 0x80 of the MSB is the sign bit.
   Error returns (-1):
   + is_signed is 0 and v &lt; 0.  TypeError is set in this case, and bytes
     isn&apos;t altered.
   + n isn&apos;t big enough to hold the full mathematical value of v.  For
     example, if is_signed is 0 and there are more digits in the v than
     fit in n; or if is_signed is 1, v &lt; 0, and n is just 1 bit shy of
     being large enough to hold a sign bit.  OverflowError is set in this
     case, but bytes holds the least-significant n bytes of the true value.
*/</doc>
<use f='codebrowser/Modules/_io/textio.c' l='2044' u='c' c='textiowrapper_parse_cookie'/>
<use f='codebrowser/Modules/_pickle.c' l='1904' u='c' c='save_long'/>
<use f='codebrowser/Modules/_randommodule.c' l='287' u='c' c='random_seed'/>
<use f='codebrowser/Modules/_struct.c' l='915' u='c' c='bp_longlong'/>
<use f='codebrowser/Modules/_struct.c' l='931' u='c' c='bp_ulonglong'/>
<use f='codebrowser/Modules/_struct.c' l='1130' u='c' c='lp_longlong'/>
<use f='codebrowser/Modules/_struct.c' l='1146' u='c' c='lp_ulonglong'/>
<def f='codebrowser/Objects/longobject.c' l='884' ll='1015' type='int _PyLong_AsByteArray(PyLongObject * v, unsigned char * bytes, size_t n, int little_endian, int is_signed)'/>
<use f='codebrowser/Objects/longobject.c' l='1250' u='c' c='PyLong_AsLongLong'/>
<use f='codebrowser/Objects/longobject.c' l='1289' u='c' c='PyLong_AsUnsignedLongLong'/>
<use f='codebrowser/Objects/longobject.c' l='5240' u='c' c='int_to_bytes_impl'/>
