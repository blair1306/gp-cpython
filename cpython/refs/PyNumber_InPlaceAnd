<dec f='codebrowser/Include/abstract.h' l='810' type='PyObject * PyNumber_InPlaceAnd(PyObject * o1, PyObject * o2)'/>
<doc f='codebrowser/Include/abstract.h' l='806'>/* Returns the result of bitwise and of o1 and o2, possibly in-place, or NULL
   on failure.

   This is the equivalent of the Python expression: o1 &amp;= o2. */</doc>
<use f='codebrowser/Modules/_operator.c' l='405' u='c' c='_operator_iand_impl'/>
<def f='codebrowser/Objects/abstract.c' l='1070' macro='1' type='PyObject * PyNumber_InPlaceAnd(PyObject * v, PyObject * w)'/>
<use f='codebrowser/Objects/weakrefobject.c' l='524' u='c' c='proxy_iand'/>
<use f='codebrowser/Python/ceval.c' l='1665' u='c' c='_PyEval_EvalFrameDefault'/>
