<dec f='codebrowser/Include/longobject.h' l='71' type='unsigned char [256]'/>
<use f='codebrowser/Objects/bytesobject.c' l='1192' u='r' c='_PyBytes_DecodeEscape'/>
<use f='codebrowser/Objects/bytesobject.c' l='1193' u='r' c='_PyBytes_DecodeEscape'/>
<use f='codebrowser/Objects/bytesobject.c' l='2402' u='r' c='_PyBytes_FromHex'/>
<use f='codebrowser/Objects/bytesobject.c' l='2409' u='r' c='_PyBytes_FromHex'/>
<def f='codebrowser/Objects/longobject.c' l='1993' ll='2010' type='unsigned char [256]'/>
<use f='codebrowser/Objects/longobject.c' l='2042' u='r' c='long_from_binary_base'/>
<use f='codebrowser/Objects/longobject.c' l='2086' u='r' c='long_from_binary_base'/>
<use f='codebrowser/Objects/longobject.c' l='2307' u='r' c='PyLong_FromString'/>
<use f='codebrowser/Objects/longobject.c' l='2357' u='r' c='PyLong_FromString'/>
<use f='codebrowser/Objects/longobject.c' l='2364' u='r' c='PyLong_FromString'/>
<doc f='codebrowser/Objects/longobject.c' l='1986'>/* Table of digit values for 8-bit string -&gt; integer conversion.
 * &apos;0&apos; maps to 0, ..., &apos;9&apos; maps to 9.
 * &apos;a&apos; and &apos;A&apos; map to 10, ..., &apos;z&apos; and &apos;Z&apos; map to 35.
 * All other indices map to 37.
 * Note that when converting a base B string, a char c is a legitimate
 * base B digit iff _PyLong_DigitValue[Py_CHARPyLong_MASK(c)] &lt; B.
 */</doc>
<use f='codebrowser/Python/mystrtoul.c' l='112' u='r' c='PyOS_strtoul'/>
<use f='codebrowser/Python/mystrtoul.c' l='121' u='r' c='PyOS_strtoul'/>
<use f='codebrowser/Python/mystrtoul.c' l='130' u='r' c='PyOS_strtoul'/>
<use f='codebrowser/Python/mystrtoul.c' l='158' u='r' c='PyOS_strtoul'/>
<use f='codebrowser/Python/mystrtoul.c' l='172' u='r' c='PyOS_strtoul'/>
<use f='codebrowser/Python/mystrtoul.c' l='186' u='r' c='PyOS_strtoul'/>
<use f='codebrowser/Python/mystrtoul.c' l='212' u='r' c='PyOS_strtoul'/>
<use f='codebrowser/Python/mystrtoul.c' l='249' u='r' c='PyOS_strtoul'/>
