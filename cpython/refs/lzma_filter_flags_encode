<dec f='include/lzma/filter.h' l='405' type='lzma_ret lzma_filter_flags_encode(const lzma_filter * filter, uint8_t * out, size_t * out_pos, size_t out_size)'/>
<doc f='include/lzma/filter.h' l='387'>/**
 * \brief       Encode Filter Flags into given buffer
 *
 * In contrast to some functions, this doesn&apos;t allocate the needed buffer.
 * This is due to how this function is used internally by liblzma.
 *
 * \param       filter      Filter ID and options to be encoded
 * \param       out         Beginning of the output buffer
 * \param       out_pos     out[*out_pos] is the next write position. This
 *                          is updated by the encoder.
 * \param       out_size    out[out_size] is the first byte to not write.
 *
 * \return      - LZMA_OK: Encoding was successful.
 *              - LZMA_OPTIONS_ERROR: Invalid or unsupported options.
 *              - LZMA_PROG_ERROR: Invalid options or not enough output
 *                buffer space (you should have checked it with
 *                lzma_filter_flags_size()).
 */</doc>
